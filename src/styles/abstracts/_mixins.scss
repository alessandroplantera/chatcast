// _mixins.scss - Modern reusable mixins (Fixed variable access)

@use 'sass:map';
@use 'variables' as *;

// Responsive breakpoints
@mixin breakpoint($size) {
  $breakpoint: map.get($breakpoints, $size);
  @if $breakpoint {
    @media (max-width: $breakpoint) {
      @content;
    }
  } @else {
    @warn "Breakpoint `#{$size}` not found in $breakpoints";
  }
}

// Flexbox utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Text utilities
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Animation utilities
@mixin fade-in($duration: 0.3s) {
  animation: fadeIn $duration ease-in-out;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

// Hover lift effect
@mixin hover-lift {
  transition: transform transition();
  
  &:hover {
    transform: translateY(-2px);
  }
}

// Container utility
@mixin container($max-width: 1200px) {
  width: 100%;
  max-width: $max-width;
  margin: 0 auto;
  padding: 0 spacing(4);
  
  @media (min-width: 640px) {
    padding: 0 spacing(6);
  }
  
  @media (min-width: 1024px) {
    padding: 0 spacing(8);
  }
}

// Split-panel responsivo: due colonne   â†’ una sola sotto breakpoint
@mixin split-panel-responsive($size: md) {
  @include breakpoint($size) {
    .split-panel {
      flex-direction: column;
      overflow-x: hidden;
    }
    .split-panel__left,
    .split-panel__right {
      width: 100%;
    }
    .split-panel__left {
      border-right: none;
      border-bottom: 1px solid color(border-primary);
      padding: spacing(3);
    }
    .split-panel__right {
      margin-top: spacing(3);
    }
  }
}

// Fluid typography: font-size responsivo tra due scale definite
@mixin fluid-type(
  $min-size-key,
  $max-size-key,
  $min-vw: map.get($breakpoints, xs),
  $max-vw: map.get($breakpoints, lg)
) {
  $min-size: font-size($min-size-key);
  $max-size: font-size($max-size-key);
  font-size: clamp(
    $min-size,
    calc(
      #{$min-size} +
      (#{$max-size} - #{$min-size}) *
      ((100vw - $min-vw) / ($max-vw - $min-vw))
    ),
    $max-size
  );
}